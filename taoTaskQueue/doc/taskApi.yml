swagger: '2.0'
info:
  description: Tasks API
  version: 1.0.0
  title: Tasks API
basePath: /act.dev
schemes:
  - http
  - https
paths:
  /taoTaskQueue/RestTask/get:
    get:
      tags:
        - Get Task
      summary: Get Task
      description: Get Task
      operationId: GetTask
      parameters:
        - name: taskId
          in: query
          description: Task id to delete
          required: true
          type: string
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/dataItem'
              errorCode:
                type: string
              errorMsg:
               type: string
        '400':
          description: Bad request if you send invalid parameters.
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorModel'
  /taoTaskQueue/RestTask/getAll:
    get:
      tags:
        - Get Tasks
      summary: Get Tasks
      description: Get Tasks
      operationId: GetTasks
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/data'
              errorCode:
                type: string
              errorMsg:
               type: string
        '400':
          description: Bad request if you send invalid parameters.
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorModel'
  /taoTaskQueue/RestTask/status:
    get:
      tags:
        - Get Tasks Status
      summary: Get Tasks Status
      description: Get Tasks Status
      operationId: GetTasksStatus
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              data:
                $ref: '#/definitions/dataStatus'
              errorCode:
                type: string
              errorMsg:
               type: string
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorModel'
  /taoTaskQueue/RestTask/archive:
    post:
      tags:
        - Archive Task
      summary: Archive Task
      description: Archive Task
      operationId: ArchiveTask
      parameters:
        - name: taskId
          in: formData
          description: Task id to delete
          required: true
          type: string
          format: int64
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              success:
                type: boolean
              errorCode:
                type: string
              errorMsg:
               type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  data:
      type: array
      items:
        $ref: '#/definitions/TaskLog'
  dataItem:
    $ref: '#/definitions/TaskLog'
  dataStatus:
    $ref: '#/definitions/TaskStatus'
  TaskStatus:
    type: object
    required:
      - numberOfTasksCompleted
      - numberOfTasksFailed
      - numberOfTasksInProgress
    properties:
      numberOfTasksCompleted:
        type: integer
        example: 10
      numberOfTasksFailed:
        type: integer
        example: 10
      numberOfTasksInProgress:
        type: integer
        example: 10
  TaskLog:
    type: object
    required:
      - name
      - id
      - label
    properties:
      id:
        type: string
        example: 'https://nccersso.taocloud.org/nccer.rdf#i150764040443513560'
      name:
        type: string
        example: PrintOrder
      label:
        type: string
        example: Booklet for gyula_pdf_2
      status:
        type: string
        enum:
        - running
        - completed
        - failed
      updatedDate:
        type: string
        format: date-time
      report:
        $ref: '#/definitions/TaskReport'
  TaskReport:
    type: object
    properties:
      type:
        type: string
        example: info
      message:
        type: string
        example: Running
      data:
        type: string
        example: Some specific report data
      children:
        type: array
        items:
          $ref: '#/definitions/TaskReport'
  errorModel:
    type: object
    properties:
      success:
        type: boolean
      version:
        type: string
      errorCode:
        type: string
      errorMsg:
        type: string